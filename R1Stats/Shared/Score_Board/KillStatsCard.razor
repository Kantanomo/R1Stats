@using R1StatsModel.Model
@using R1StatsModel
@using Microsoft.EntityFrameworkCore
@using R1StatsModel.Extensions

@inject IDbContextFactory<StatsContext> DbFactory

<table class="table scoreboard player-stats" data-card="kills">
    <thead>
    <tr>
        <th>Name</th>
        <th>Kills</th>
        <th>Assists</th>
        <th>Deaths</th>
        <th>K/D/A</th>
        <th>KD Ratio</th>
    </tr>
    </thead>
    <tbody>
    @if (Match != null)
    {
        @foreach (var player in Match.Players.OrderBy(x => x.Place).ThenByDescending(x => x.Score))
        {
            <tr class="@($"team-{player.Team.GetDisplayName().ToLower()}")">
                <td>@PlayerName(player)</td>
                <td>@player.Kills</td>
                <td>@player.Assists</td>
                <td>@player.Deaths</td>
                <td>@player.KDA</td>
                <td>@player.KDARatio</td>
            </tr>
        }
    }
    </tbody>
</table>


@code {
    [Parameter]
    public Match Match { get; set; }

    public string PlayerName(MatchPlayer player)
    {
        using var ctx = DbFactory.CreateDbContext();
        var a = ctx.MatchPlayers.Include(x => x.Player).Single(x => x.Id == player.Id);
        return a.Player.Name;
    }
}
