@using R1StatsModel.Model
@using R1StatsModel
@using Microsoft.EntityFrameworkCore
@using R1StatsModel.Extensions

@inject IDbContextFactory<StatsContext> DbFactory

<table class="table scoreboard weapon-stats" data-card="weapons">
    <thead>
    <tr>
        <th>Player</th>
        <th>Shots Hit</th>
        <th>Shots Fired</th>
        <th>Hit Percentage</th>
        <th>Head Shots</th>
    </tr>
    </thead>
    <tbody>
    @if (Match != null)
    {
        @foreach (var matchPlayer in Match.Players.OrderBy(x => x.Place).ThenByDescending(x => x.Score))
        {
            <tr class="@($"team-{matchPlayer.Team.GetDisplayName().ToLower()}")">
                <td>@PlayerName(matchPlayer)</td>
                <td>@matchPlayer.ShotsHit</td>
                <td>@matchPlayer.ShotsFired</td>
                <td>@matchPlayer.HitPercentage</td>
                <td>@matchPlayer.HeadShots</td>
            </tr>
        }
    }
    </tbody>
</table>

@code {
    [Parameter]
    public Match Match { get; set; }

    public string PlayerName(MatchPlayer player)
    {
        using var ctx = DbFactory.CreateDbContext();
        var a = ctx.MatchPlayers.Include(x => x.Player).Single(x => x.Id == player.Id);
        return a.Player.Name;
    }
}
