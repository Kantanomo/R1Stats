@using R1StatsModel.Model
@using R1StatsModel
@using Microsoft.EntityFrameworkCore
@using R1StatsModel.Extensions

@inject IDbContextFactory<StatsContext> DbFactory

<MudTable Items="Match?.Players.OrderBy(x => x.Place).ThenByDescending(x => x.Score)" SortLabel="Sort By" RowStyleFunc="RowStyleFunc">
    <HeaderContent>
        <MudTh>Player</MudTh>
        <MudTh>Kills</MudTh>
        <MudTh>Assists</MudTh>
        <MudTh>Deaths</MudTh>
        <MudTh>KDA</MudTh>
        <MudTh>Ratio</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Player">@PlayerName(context)</MudTd>
        <MudTd DataLabel="Kills">@context.Kills</MudTd>
        <MudTd DataLabel="Assists">@context.Assists</MudTd>
        <MudTd DataLabel="Deaths">@context.Deaths</MudTd>
        <MudTd DataLabel="KDA">@context.KDA</MudTd>
        <MudTd DataLabel="Ratio">@context.KDARatio</MudTd>
    </RowTemplate>
</MudTable>

@code {
    [Parameter]
    public Match Match { get; set; }

    public string PlayerName(MatchPlayer player)
    {
        using var ctx = DbFactory.CreateDbContext();
        var a = ctx.MatchPlayers.Include(x => x.Player).Single(x => x.Id == player.Id);
        return a.Player.Name;
    }

    private string RowStyleFunc(MatchPlayer arg1, int index)
    {
        return arg1.Team.GetStyle("background");
    }
}
